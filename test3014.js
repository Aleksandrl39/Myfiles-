(function () {
    // URL API
    var torrentApiUrl = "https://torapi.vercel.app/api/search/title/all";
    var torrentDetailsApiUrl = "https://torapi.vercel.app/api/search/id";

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API
    async function fetchData(url) {
        try {
            const response = await fetch(url);
            return await response.json();
        } catch (error) {
            console.log("‚ùå –û—à–∏–±–∫–∞ API: " + error);
            return null;
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤
    async function searchTorrents(query) {
        var url = `${torrentApiUrl}?query=${encodeURIComponent(query)}`;
        const data = await fetchData(url);
        return data || {}; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ —Ç—Ä–µ–∫–µ—Ä—ã
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Ç–æ—Ä—Ä–µ–Ω—Ç–∞ –ø–æ ID –∏ —Ç—Ä–µ–∫–µ—Ä—É
    async function getDetailsById(tracker, id) {
        var url = `${torrentDetailsApiUrl}/${tracker}?query=${id}`;
        const data = await fetchData(url);
        return data?.[0] || {}; // –û—Ç–≤–µ—Ç ‚Äî –º–∞—Å—Å–∏–≤, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞
    function createSearchPage() {
        // –û—á–∏—Å—Ç–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.body.innerHTML = "";
        document.body.style.background = "#121212";
        document.body.style.color = "#fff";
        document.body.style.fontFamily = "Arial, sans-serif";
        document.body.style.padding = "10px";
        document.body.style.display = "flex";
        document.body.style.flexDirection = "column";
        document.body.style.height = "100vh";
        document.body.style.overflow = "hidden";

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        var title = document.createElement("h2");
        title.textContent = "–ü–æ–∏—Å–∫";
        title.style.textAlign = "center";
        title.style.marginBottom = "10px";
        document.body.appendChild(title);

        // –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞
        var searchInput = document.createElement("input");
        searchInput.type = "search";
        searchInput.placeholder = "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç...";
        searchInput.style.width = "100%";
        searchInput.style.background = "#333";
        searchInput.style.border = "none";
        searchInput.style.outline = "none";
        searchInput.style.color = "#fff";
        searchInput.style.fontSize = "16px";
        searchInput.style.padding = "10px";
        searchInput.style.borderRadius = "10px";
        document.body.appendChild(searchInput);

        // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        var resultsContainer = document.createElement("div");
        resultsContainer.style.flexGrow = "1";
        resultsContainer.style.overflowY = "auto";
        resultsContainer.style.marginTop = "10px";
        resultsContainer.style.paddingRight = "10px";
        document.body.appendChild(resultsContainer);

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        async function renderList(items) {
            resultsContainer.innerHTML = "";
            if (Object.keys(items).length === 0) {
                resultsContainer.innerHTML = "<p>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.</p>";
                return;
            }

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ —Ç—Ä–µ–∫–µ—Ä–∞
            for (const [tracker, data] of Object.entries(items)) {
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç—Ä–µ–∫–µ—Ä—ã, –≥–¥–µ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                if (data.Result && data.Result.includes("No matches")) continue;

                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–∞—Å—Å–∏–≤ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤
                for (const item of data) {
                    const div = document.createElement("div");
                    div.style.display = "flex";
                    div.style.alignItems = "center";
                    div.style.padding = "10px";
                    div.style.marginBottom = "5px";
                    div.style.backgroundColor = "#333";
                    div.style.color = "#fff";
                    div.style.borderRadius = "5px";
                    div.style.cursor = "pointer";

                    // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å—Ç–µ—Ä–∞ (–∑–∞–≥–ª—É—à–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
                    const img = document.createElement("img");
                    img.style.width = "50px";
                    img.style.height = "50px";
                    img.style.marginRight = "10px";
                    img.style.borderRadius = "5px";
                    img.src = "https://via.placeholder.com/100";
                    img.onerror = function () {
                        img.src = "https://via.placeholder.com/100"; // –ó–∞–≥–ª—É—à–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
                    };

                    // –¢–µ–∫—Å—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
                    const text = document.createElement("div");
                    text.innerHTML = `
                        <strong>${item.Name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–∞–∑–¥–∞—á–∞"}</strong><br>
                        üì• <strong>${item.Seeds || 0}</strong> —Å–∏–¥–µ—Ä–æ–≤ | üü¢ <strong>${item.Peers || 0}</strong> –ª–∏—á–µ—Ä–æ–≤
                    `;

                    // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                    div.appendChild(img);
                    div.appendChild(text);

                    // –ó–∞–ø—Ä–æ—Å –¥–µ—Ç–∞–ª–µ–π –¥–ª—è –ø–æ—Å—Ç–µ—Ä–∞ –∏ magnet-—Å—Å—ã–ª–∫–∏
                    const details = await getDetailsById(tracker, item.Id);
                    if (details?.Poster) img.src = details.Poster; // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å—Ç–µ—Ä

                    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è magnet-—Å—Å—ã–ª–∫–∏
                    div.addEventListener("click", () => {
                        if (details?.Magnet) {
                            window.open(details.Magnet, "_blank");
                        } else {
                            alert("Magnet-—Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
                        }
                    });

                    resultsContainer.appendChild(div);
                }
            }
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
        searchInput.addEventListener("keypress", async function (event) {
            if (event.key === "Enter") {
                const query = searchInput.value.trim();
                if (!query) return;

                resultsContainer.innerHTML = "<p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>";

                const torrents = await searchTorrents(query);
                renderList(torrents);
            }
        });
    }

    // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞
    createSearchPage();
})();
