// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞
console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞ –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏...");

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø–æ–∏—Å–∫–∞
function createSearchComponent() {
    console.log("–°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–∏—Å–∫–∞...");

    let searchComponent = {
        id: "muzis_search",
        name: "–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫",
        type: "search",
        onSearch: function (query) {
            console.log(`–ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: ${query}`);
            searchMusic(query);
        }
    };

    registerComponent(searchComponent);
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
function registerComponent(component) {
    console.log(`–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏: ${component.id}`);
    
    if (typeof Lampa !== "undefined" && Lampa.Component) {
        Lampa.Component.add(component);
        console.log(`–ö–æ–º–ø–æ–Ω–µ–Ω—Ç '${component.id}' –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!`);
    } else {
        console.error("–û—à–∏–±–∫–∞: Lampa.Component –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω.");
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏ —á–µ—Ä–µ–∑ API Apple
function searchMusic(query) {
    let apiUrl = `https://itunes.apple.com/search?term=${encodeURIComponent(query)}&media=music&limit=10`;

    fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
            console.log("–ü–æ–ª—É—á–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:", data);
            displayResults(data.results);
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ API:", error));
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
function displayResults(results) {
    console.log("–†–µ–Ω–¥–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞...");

    if (results.length === 0) {
        console.log("–ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.");
        return;
    }

    results.forEach(track => {
        console.log(`üéµ ${track.trackName} - ${track.artistName}`);
    });
}

// –ó–∞–ø—É—Å–∫ –ø–ª–∞–≥–∏–Ω–∞
console.log("–ü–ª–∞–≥–∏–Ω –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...");
createSearchComponent();
console.log("–ü–ª–∞–≥–∏–Ω –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω!");
